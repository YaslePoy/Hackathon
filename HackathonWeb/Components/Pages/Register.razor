@page "/register"
@rendermode InteractiveServer
@using System.Net.Http.Json

<style>
    body{
        width: 30%;
    }
    .pad10 {
        margin: 5px;
    }
    a{
        text-decoration: none;
        color: black;
    }
</style>

<p>@alert</p>

<div>
    <div class="form-group">
        <label for="name" class="pad10">Имя:</label>
        <input type="text" class="form-control pad10" id="name" @bind-value="@user.Name" required />
    </div>
    <div class="form-group">
        <label for="surname" class="pad10">Фамилия:</label>
        <input type="text" class="form-control pad10" id="surname" @bind-value="@user.Surname" required />
    </div>
    <div class="form-group">
        <label for="email" class="pad10">Почта:</label>
        <input type="text" class="form-control pad10" id="email" @bind-value="@user.Email" required />
    </div>
    <div class="form-group">
        <label for="password" class="pad10">Пароль:</label>
        <input type="password" class="form-control pad10" id="password" @bind-value="@user.Password" required />
    </div>
    <button @onclick="HandleRegister" class="btn btn-primary pad10">Зарегистрироваться</button>
    <a href="/auth" class="pad10">Уже есть аккаунт? Войти</a>
</div>

@code {
    public string alert;
    public UserCreateDTO user = new();

    [Inject]
    public HttpClient Http { get; set; }
    [Inject]
    public NavigationManager Nav { get; set; }

    public async Task HandleRegister()
    {
        alert = string.Empty;
        try
        {
            var response = await Http.PostAsJsonAsync("/api/user", user);
            if (response.IsSuccessStatusCode)
            {
                alert = "Регистрация успешна! Теперь вы можете войти.";
                await Task.Delay(1000);
                Nav.NavigateTo("/auth");
            }
            else if (response.StatusCode == System.Net.HttpStatusCode.Conflict)
            {
                alert = "Пользователь с такой почтой уже существует.";
            }
            else
            {
                alert = $"Ошибка регистрации: {response.StatusCode}";
            }
        }
        catch (Exception ex)
        {
            alert = $"Ошибка: {ex.Message}";
        }
    }

    public class UserCreateDTO
    {
        public string Name { get; set; }
        public string Email { get; set; }
        public int Role { get; set; } = 0;
        public string Surname { get; set; }
        public string Password { get; set; }
    }
}
